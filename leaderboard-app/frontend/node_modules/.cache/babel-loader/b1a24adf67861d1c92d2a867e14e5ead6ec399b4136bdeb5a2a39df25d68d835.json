{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agarw\\\\Desktop\\\\3Winternshiptask\\\\leaderboard-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './App.css';\n// import UserDropdown from './components/UserDropdown';\n// import ClaimButton from './components/ClaimButton';\n// import Leaderboard from './components/Leaderboard';\n\n// function App() {\n//   const [users, setUsers] = useState([]);\n//   const [selectedUser, setSelectedUser] = useState('');\n\n//   const fetchUsers = async () => {\n//     try {\n//       const res = await axios.get('http://localhost:3000/api/users');\n//       setUsers(res.data);\n//     } catch (error) {\n//       console.error('Failed to fetch users:', error);\n//     }\n//   };\n\n//   const handleClaim = async () => {\n//     if (!selectedUser) return;\n//     await axios.post('http://localhost:3000/api/claim', { userId: selectedUser });\n//     fetchUsers();\n//   };\n\n//   useEffect(() => {\n//     fetchUsers();\n//   }, []);\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"card\">\n//         <h1 className=\"title\">üèÜ Monthly Wealth Leaderboard</h1>\n//         <UserDropdown users={users} onChange={setSelectedUser} />\n//         <ClaimButton onClick={handleClaim} />\n//         <Leaderboard users={users} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport UserDropdown from './components/UserDropdown';\nimport ClaimButton from './components/ClaimButton';\nimport Leaderboard from './components/Leaderboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [claimedPoints, setClaimedPoints] = useState(null);\n  const fetchUsers = async () => {\n    const res = await axios.get('http://localhost:3000/api/users');\n    setUsers(res.data);\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const handleClaim = async () => {\n    if (!selectedUser) return alert('Please select a user');\n    try {\n      const res = await axios.post('http://localhost:3000/api/claim', {\n        userId: selectedUser\n      });\n      setClaimedPoints(res.data.claimedPoints);\n      fetchUsers(); // Refresh leaderboard\n    } catch (err) {\n      console.error(err);\n      alert('Error claiming points');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 40\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Monthly Wealth Ranking \\uD83C\\uDF1F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserDropdown, {\n      users: users,\n      onChange: setSelectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClaimButton, {\n      onClick: handleClaim\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), claimedPoints !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        color: 'green'\n      },\n      children: [\"\\uD83C\\uDF89 You claimed \", claimedPoints, \" points!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Leaderboard, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"04OJLWjBVDngKF3GxXaDP95jMsg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","UserDropdown","ClaimButton","Leaderboard","jsxDEV","_jsxDEV","App","_s","users","setUsers","selectedUser","setSelectedUser","claimedPoints","setClaimedPoints","fetchUsers","res","get","data","handleClaim","alert","post","userId","err","console","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","fontWeight","color","_c","$RefreshReg$"],"sources":["C:/Users/agarw/Desktop/3Winternshiptask/leaderboard-app/frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import './App.css';\r\n// import UserDropdown from './components/UserDropdown';\r\n// import ClaimButton from './components/ClaimButton';\r\n// import Leaderboard from './components/Leaderboard';\r\n\r\n// function App() {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [selectedUser, setSelectedUser] = useState('');\r\n\r\n//   const fetchUsers = async () => {\r\n//     try {\r\n//       const res = await axios.get('http://localhost:3000/api/users');\r\n//       setUsers(res.data);\r\n//     } catch (error) {\r\n//       console.error('Failed to fetch users:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleClaim = async () => {\r\n//     if (!selectedUser) return;\r\n//     await axios.post('http://localhost:3000/api/claim', { userId: selectedUser });\r\n//     fetchUsers();\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <div className=\"card\">\r\n//         <h1 className=\"title\">üèÜ Monthly Wealth Leaderboard</h1>\r\n//         <UserDropdown users={users} onChange={setSelectedUser} />\r\n//         <ClaimButton onClick={handleClaim} />\r\n//         <Leaderboard users={users} />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport UserDropdown from './components/UserDropdown';\r\nimport ClaimButton from './components/ClaimButton';\r\nimport Leaderboard from './components/Leaderboard';\r\n\r\nfunction App() {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState('');\r\n  const [claimedPoints, setClaimedPoints] = useState(null);\r\n\r\n  const fetchUsers = async () => {\r\n    const res = await axios.get('http://localhost:3000/api/users');\r\n    setUsers(res.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleClaim = async () => {\r\n    if (!selectedUser) return alert('Please select a user');\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:3000/api/claim', {\r\n        userId: selectedUser,\r\n      });\r\n\r\n      setClaimedPoints(res.data.claimedPoints);\r\n      fetchUsers(); // Refresh leaderboard\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Error claiming points');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 40 }}>\r\n      <h1>Monthly Wealth Ranking üåü</h1>\r\n      <UserDropdown users={users} onChange={setSelectedUser} />\r\n      <ClaimButton onClick={handleClaim} />\r\n\r\n      {claimedPoints !== null && (\r\n        <p style={{ fontWeight: 'bold', color: 'green' }}>\r\n          üéâ You claimed {claimedPoints} points!\r\n        </p>\r\n      )}\r\n\r\n      <Leaderboard users={users} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}