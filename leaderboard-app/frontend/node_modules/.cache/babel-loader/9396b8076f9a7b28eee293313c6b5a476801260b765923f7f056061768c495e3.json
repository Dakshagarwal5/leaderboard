{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agarw\\\\Desktop\\\\3Winternshiptask\\\\leaderboard-app\\\\frontend\\\\src\\\\components\\\\ClaimButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClaimPoints = ({\n  users,\n  onPointsClaimed\n}) => {\n  _s();\n  const [selectedUserId, setSelectedUserId] = useState(\"\");\n  const [claimResult, setClaimResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleClaim = async () => {\n    if (!selectedUserId) return;\n    setLoading(true);\n    try {\n      const response = await axios.post(`http://localhost:5000/api/claim-points`, {\n        userId: selectedUserId\n      });\n      const {\n        points\n      } = response.data;\n      setClaimResult(points);\n      onPointsClaimed(selectedUserId, points); // callback to update leaderboard\n    } catch (err) {\n      console.error(\"Error claiming points:\", err);\n      alert(\"Failed to claim points. Try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"20px 0\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select User: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedUserId,\n      onChange: e => {\n        setSelectedUserId(e.target.value);\n        setClaimResult(null); // reset result on change\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: user._id,\n        children: user.name\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClaim,\n      disabled: !selectedUserId || loading,\n      style: {\n        marginLeft: \"10px\"\n      },\n      children: loading ? \"Claiming...\" : \"Claim\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), claimResult !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      children: [\"\\uD83C\\uDF89 User gained \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [claimResult, \" points!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ClaimPoints, \"kIw6OGHrNQrdxHZTRnFiAuepHmk=\");\n_c = ClaimPoints;\nexport default ClaimPoints;\nvar _c;\n$RefreshReg$(_c, \"ClaimPoints\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ClaimPoints","users","onPointsClaimed","_s","selectedUserId","setSelectedUserId","claimResult","setClaimResult","loading","setLoading","handleClaim","response","post","userId","points","data","err","console","error","alert","style","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","user","_id","name","onClick","disabled","marginLeft","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/agarw/Desktop/3Winternshiptask/leaderboard-app/frontend/src/components/ClaimButton.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ClaimPoints = ({ users, onPointsClaimed }) => {\r\n  const [selectedUserId, setSelectedUserId] = useState(\"\");\r\n  const [claimResult, setClaimResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleClaim = async () => {\r\n    if (!selectedUserId) return;\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000/api/claim-points`, {\r\n        userId: selectedUserId,\r\n      });\r\n\r\n      const { points } = response.data;\r\n\r\n      setClaimResult(points);\r\n      onPointsClaimed(selectedUserId, points); // callback to update leaderboard\r\n    } catch (err) {\r\n      console.error(\"Error claiming points:\", err);\r\n      alert(\"Failed to claim points. Try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"20px 0\" }}>\r\n      <label>Select User: </label>\r\n      <select\r\n        value={selectedUserId}\r\n        onChange={(e) => {\r\n          setSelectedUserId(e.target.value);\r\n          setClaimResult(null); // reset result on change\r\n        }}\r\n      >\r\n        <option value=\"\">-- Select --</option>\r\n        {users.map((user) => (\r\n          <option key={user._id} value={user._id}>\r\n            {user.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button onClick={handleClaim} disabled={!selectedUserId || loading} style={{ marginLeft: \"10px\" }}>\r\n        {loading ? \"Claiming...\" : \"Claim\"}\r\n      </button>\r\n\r\n      {claimResult !== null && (\r\n        <p style={{ marginTop: \"10px\" }}>\r\n          ðŸŽ‰ User gained <strong>{claimResult} points!</strong>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClaimPoints;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}