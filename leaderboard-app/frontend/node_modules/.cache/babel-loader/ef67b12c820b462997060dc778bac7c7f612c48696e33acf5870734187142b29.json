{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agarw\\\\Desktop\\\\3Winternshiptask\\\\leaderboard-app\\\\frontend\\\\src\\\\components\\\\Leaderboard.js\";\n// import React from \"react\";\n// import \"./Leaderboard.css\";\n\n// const Leaderboard = ({ users }) => {\n//   if (!users || users.length === 0) return <p>No users found</p>;\n\n//   const sortedUsers = [...users].sort((a, b) => b.points - a.points);\n//   const topThree = sortedUsers.slice(0, 3);\n//   const rest = sortedUsers.slice(3);\n\n//   return (\n//     <div className=\"leaderboard-container\">\n//       <h2>🏆 Top 3 Performers</h2>\n//       <div className=\"top-three\">\n//         {topThree.map((user, index) => (\n//           <div key={user._id} className={`top-card top-${index + 1}`}>\n//             <h3>#{index + 1}</h3>\n//             <p>{user.name}</p>\n//             <p>{user.points} pts</p>\n//           </div>\n//         ))}\n//       </div>\n\n//       <h2>📋 Full Leaderboard</h2>\n//       <table className=\"leaderboard-table\">\n//         <thead>\n//           <tr>\n//             <th>Rank</th>\n//             <th>Name</th>\n//             <th>Points</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {rest.map((user, index) => (\n//             <tr key={user._id}>\n//               <td>{index + 4}</td>\n//               <td>{user.name}</td>\n//               <td>{user.points}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default Leaderboard;\n\n// // import React, { useEffect, useState } from \"react\";\n// // import axios from \"axios\";\n// // import Leaderboard from \"./Leaderboard\";\n// // import ClaimPoints from \"./ClaimPoints\";\n\n// // const LeaderboardPage = () => {\n// //   const [users, setUsers] = useState([]);\n\n// //   const fetchUsers = async () => {\n// //     const response = await axios.get(\"http://localhost:5000/api/users\");\n// //     setUsers(response.data);\n// //   };\n\n// //   useEffect(() => {\n// //     fetchUsers();\n// //   }, []);\n\n// //   const handlePointsClaimed = (userId, addedPoints) => {\n// //     // Update points for selected user\n// //     setUsers((prevUsers) =>\n// //       prevUsers.map((user) =>\n// //         user._id === userId\n// //           ? { ...user, points: user.points + addedPoints }\n// //           : user\n// //       )\n// //     );\n// //   };\n\n// //   return (\n// //     <div>\n// //       <ClaimPoints users={users} onPointsClaimed={handlePointsClaimed} />\n// //       <Leaderboard users={users} />\n// //     </div>\n// //   );\n// // };\n\n// // export default LeaderboardPage;\n\nimport React from 'react';\nimport './Leaderboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leaderboard = ({\n  users\n}) => {\n  if (!users || users.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No users found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 44\n  }, this);\n  const sortedUsers = [...users].sort((a, b) => b.points - a.points);\n  const topThree = sortedUsers.slice(0, 3);\n  const rest = sortedUsers.slice(3);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFC6 Top 3 Performers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-three\",\n      children: topThree.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `top-card top-${index + 1}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"#\", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [user.points, \" pts\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCCB Full Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"leaderboard-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rest.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.points\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Leaderboard","users","length","children","fileName","_jsxFileName","lineNumber","columnNumber","sortedUsers","sort","a","b","points","topThree","slice","rest","className","map","user","index","name","_id","_c","$RefreshReg$"],"sources":["C:/Users/agarw/Desktop/3Winternshiptask/leaderboard-app/frontend/src/components/Leaderboard.js"],"sourcesContent":["\r\n// import React from \"react\";\r\n// import \"./Leaderboard.css\";\r\n\r\n// const Leaderboard = ({ users }) => {\r\n//   if (!users || users.length === 0) return <p>No users found</p>;\r\n\r\n//   const sortedUsers = [...users].sort((a, b) => b.points - a.points);\r\n//   const topThree = sortedUsers.slice(0, 3);\r\n//   const rest = sortedUsers.slice(3);\r\n\r\n//   return (\r\n//     <div className=\"leaderboard-container\">\r\n//       <h2>🏆 Top 3 Performers</h2>\r\n//       <div className=\"top-three\">\r\n//         {topThree.map((user, index) => (\r\n//           <div key={user._id} className={`top-card top-${index + 1}`}>\r\n//             <h3>#{index + 1}</h3>\r\n//             <p>{user.name}</p>\r\n//             <p>{user.points} pts</p>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       <h2>📋 Full Leaderboard</h2>\r\n//       <table className=\"leaderboard-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Rank</th>\r\n//             <th>Name</th>\r\n//             <th>Points</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {rest.map((user, index) => (\r\n//             <tr key={user._id}>\r\n//               <td>{index + 4}</td>\r\n//               <td>{user.name}</td>\r\n//               <td>{user.points}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Leaderboard;\r\n\r\n\r\n// // import React, { useEffect, useState } from \"react\";\r\n// // import axios from \"axios\";\r\n// // import Leaderboard from \"./Leaderboard\";\r\n// // import ClaimPoints from \"./ClaimPoints\";\r\n\r\n// // const LeaderboardPage = () => {\r\n// //   const [users, setUsers] = useState([]);\r\n\r\n// //   const fetchUsers = async () => {\r\n// //     const response = await axios.get(\"http://localhost:5000/api/users\");\r\n// //     setUsers(response.data);\r\n// //   };\r\n\r\n// //   useEffect(() => {\r\n// //     fetchUsers();\r\n// //   }, []);\r\n\r\n// //   const handlePointsClaimed = (userId, addedPoints) => {\r\n// //     // Update points for selected user\r\n// //     setUsers((prevUsers) =>\r\n// //       prevUsers.map((user) =>\r\n// //         user._id === userId\r\n// //           ? { ...user, points: user.points + addedPoints }\r\n// //           : user\r\n// //       )\r\n// //     );\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <ClaimPoints users={users} onPointsClaimed={handlePointsClaimed} />\r\n// //       <Leaderboard users={users} />\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default LeaderboardPage;\r\n\r\n\r\nimport React from 'react';\r\nimport './Leaderboard.css';\r\n\r\nconst Leaderboard = ({ users }) => {\r\n  if (!users || users.length === 0) return <p>No users found</p>;\r\n\r\n  const sortedUsers = [...users].sort((a, b) => b.points - a.points);\r\n  const topThree = sortedUsers.slice(0, 3);\r\n  const rest = sortedUsers.slice(3);\r\n\r\n  return (\r\n    <div className=\"leaderboard-container\">\r\n      <h2>🏆 Top 3 Performers</h2>\r\n      <div className=\"top-three\">\r\n        {topThree.map((user, index) => (\r\n          <div key={user._id} className={`top-card top-${index + 1}`}>\r\n            <h3>#{index + 1}</h3>\r\n            <p>{user.name}</p>\r\n            <p>{user.points} pts</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <h2>📋 Full Leaderboard</h2>\r\n      <table className=\"leaderboard-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Rank</th>\r\n            <th>Name</th>\r\n            <th>Points</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {rest.map((user, index) => (\r\n            <tr key={user._id}>\r\n              <td>{index + 4}</td>\r\n              <td>{user.name}</td>\r\n              <td>{user.points}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}