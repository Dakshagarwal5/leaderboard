{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agarw\\\\Desktop\\\\3Winternshiptask\\\\leaderboard-app\\\\frontend\\\\src\\\\components\\\\Leaderboard.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import \"./Leaderboard.css\";\n\n// const Leaderboard = ({ users }) => {\n//   if (!users || users.length === 0) return <p>No users found</p>;\n\n//   const sortedUsers = [...users].sort((a, b) => b.points - a.points);\n//   const topThree = sortedUsers.slice(0, 3);\n//   const rest = sortedUsers.slice(3);\n\n//   return (\n//     <div className=\"leaderboard-container\">\n//       <h2>üèÜ Top 3 Performers</h2>\n//       <div className=\"top-three\">\n//         {topThree.map((user, index) => (\n//           <div key={user._id} className={`top-card top-${index + 1}`}>\n//             <h3>#{index + 1}</h3>\n//             <p>{user.name}</p>\n//             <p>{user.points} pts</p>\n//           </div>\n//         ))}\n//       </div>\n\n//       <h2>üìã Full Leaderboard</h2>\n//       <table className=\"leaderboard-table\">\n//         <thead>\n//           <tr>\n//             <th>Rank</th>\n//             <th>Name</th>\n//             <th>Points</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {rest.map((user, index) => (\n//             <tr key={user._id}>\n//               <td>{index + 4}</td>\n//               <td>{user.name}</td>\n//               <td>{user.points}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default Leaderboard;\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Leaderboard from \"./Leaderboard\";\nimport ClaimPoints from \"./ClaimPoints\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeaderboardPage = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const fetchUsers = async () => {\n    const response = await axios.get(\"http://localhost:5000/api/users\");\n    setUsers(response.data);\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const handlePointsClaimed = (userId, addedPoints) => {\n    // Update points for selected user\n    setUsers(prevUsers => prevUsers.map(user => user._id === userId ? {\n      ...user,\n      points: user.points + addedPoints\n    } : user));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ClaimPoints, {\n      users: users,\n      onPointsClaimed: handlePointsClaimed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Leaderboard, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(LeaderboardPage, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = LeaderboardPage;\nexport default LeaderboardPage;\nvar _c;\n$RefreshReg$(_c, \"LeaderboardPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","Leaderboard","ClaimPoints","jsxDEV","_jsxDEV","LeaderboardPage","_s","users","setUsers","fetchUsers","response","get","data","handlePointsClaimed","userId","addedPoints","prevUsers","map","user","_id","points","children","onPointsClaimed","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/agarw/Desktop/3Winternshiptask/leaderboard-app/frontend/src/components/Leaderboard.js"],"sourcesContent":["\r\n// import React from \"react\";\r\n// import \"./Leaderboard.css\";\r\n\r\n// const Leaderboard = ({ users }) => {\r\n//   if (!users || users.length === 0) return <p>No users found</p>;\r\n\r\n//   const sortedUsers = [...users].sort((a, b) => b.points - a.points);\r\n//   const topThree = sortedUsers.slice(0, 3);\r\n//   const rest = sortedUsers.slice(3);\r\n\r\n//   return (\r\n//     <div className=\"leaderboard-container\">\r\n//       <h2>üèÜ Top 3 Performers</h2>\r\n//       <div className=\"top-three\">\r\n//         {topThree.map((user, index) => (\r\n//           <div key={user._id} className={`top-card top-${index + 1}`}>\r\n//             <h3>#{index + 1}</h3>\r\n//             <p>{user.name}</p>\r\n//             <p>{user.points} pts</p>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       <h2>üìã Full Leaderboard</h2>\r\n//       <table className=\"leaderboard-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Rank</th>\r\n//             <th>Name</th>\r\n//             <th>Points</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {rest.map((user, index) => (\r\n//             <tr key={user._id}>\r\n//               <td>{index + 4}</td>\r\n//               <td>{user.name}</td>\r\n//               <td>{user.points}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Leaderboard;\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Leaderboard from \"./Leaderboard\";\r\nimport ClaimPoints from \"./ClaimPoints\";\r\n\r\nconst LeaderboardPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const fetchUsers = async () => {\r\n    const response = await axios.get(\"http://localhost:5000/api/users\");\r\n    setUsers(response.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handlePointsClaimed = (userId, addedPoints) => {\r\n    // Update points for selected user\r\n    setUsers((prevUsers) =>\r\n      prevUsers.map((user) =>\r\n        user._id === userId\r\n          ? { ...user, points: user.points + addedPoints }\r\n          : user\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ClaimPoints users={users} onPointsClaimed={handlePointsClaimed} />\r\n      <Leaderboard users={users} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaderboardPage;\r\n"],"mappings":";;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,iCAAiC,CAAC;IACnEH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;EACzB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdW,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,mBAAmB,GAAGA,CAACC,MAAM,EAAEC,WAAW,KAAK;IACnD;IACAP,QAAQ,CAAEQ,SAAS,IACjBA,SAAS,CAACC,GAAG,CAAEC,IAAI,IACjBA,IAAI,CAACC,GAAG,KAAKL,MAAM,GACf;MAAE,GAAGI,IAAI;MAAEE,MAAM,EAAEF,IAAI,CAACE,MAAM,GAAGL;IAAY,CAAC,GAC9CG,IACN,CACF,CAAC;EACH,CAAC;EAED,oBACEd,OAAA;IAAAiB,QAAA,gBACEjB,OAAA,CAACF,WAAW;MAACK,KAAK,EAAEA,KAAM;MAACe,eAAe,EAAET;IAAoB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnEtB,OAAA,CAACH,WAAW;MAACM,KAAK,EAAEA;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV,CAAC;AAACpB,EAAA,CA7BID,eAAe;AAAAsB,EAAA,GAAftB,eAAe;AA+BrB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}