{"ast":null,"code":"\n// import './App.css';\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import Leaderboard from './components/Leaderboard';\n\n// function App() {\n//   const [users, setUsers] = useState([]);\n//   const [selectedUserId, setSelectedUserId] = useState('');\n//   const [claimedPoints, setClaimedPoints] = useState(null);\n\n//   // Fetch all users\n//   const fetchUsers = async () => {\n//     try {\n//       const res = await axios.get('http://localhost:3000/api/users');\n//       setUsers(res.data);\n//     } catch (err) {\n//       console.error('Error fetching users:', err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchUsers();\n//   }, []);\n\n//   // Handle claim button\n//   const handleClaimPoints = async () => {\n//     if (!selectedUserId) {\n//       alert('Please select a user');\n//       return;\n//     }\n\n//     try {\n//       const res = await axios.post('http://localhost:3000/api/claim', {\n//         userId: selectedUserId,\n//       });\n\n//       const claimed = res.data.claimedPoints;\n//       setClaimedPoints(claimed);\n//       await fetchUsers(); // Refresh leaderboard\n//     } catch (err) {\n//       console.error('Error claiming points:', err);\n//       alert('Failed to claim points');\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: '30px', fontFamily: 'Arial' }}>\n//       <h1>ðŸŒŸ Monthly Wealth Ranking</h1>\n\n//       <select\n//         value={selectedUserId}\n//         onChange={(e) => setSelectedUserId(e.target.value)}\n//         style={{ padding: '8px', marginRight: '10px' }}\n//       >\n//         <option value=\"\">Select a user</option>\n//         {users.map((user) => (\n//           <option key={user._id} value={user._id}>\n//             {user.name}\n//           </option>\n//         ))}\n//       </select>\n\n//       <button onClick={handleClaimPoints} style={{ padding: '8px 16px' }}>\n//         Claim Points\n//       </button>\n\n//       {claimedPoints !== null && (\n//         <p style={{ color: 'green', fontWeight: 'bold', marginTop: '10px' }}>\n//           ðŸŽ‰ You claimed {claimedPoints} points!\n//         </p>\n//       )}\n\n//       <Leaderboard users={users} />\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/agarw/Desktop/3Winternshiptask/leaderboard-app/frontend/src/App.js"],"sourcesContent":["\r\n// import './App.css';\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import Leaderboard from './components/Leaderboard';\r\n\r\n// function App() {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [selectedUserId, setSelectedUserId] = useState('');\r\n//   const [claimedPoints, setClaimedPoints] = useState(null);\r\n\r\n//   // Fetch all users\r\n//   const fetchUsers = async () => {\r\n//     try {\r\n//       const res = await axios.get('http://localhost:3000/api/users');\r\n//       setUsers(res.data);\r\n//     } catch (err) {\r\n//       console.error('Error fetching users:', err);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   // Handle claim button\r\n//   const handleClaimPoints = async () => {\r\n//     if (!selectedUserId) {\r\n//       alert('Please select a user');\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const res = await axios.post('http://localhost:3000/api/claim', {\r\n//         userId: selectedUserId,\r\n//       });\r\n\r\n//       const claimed = res.data.claimedPoints;\r\n//       setClaimedPoints(claimed);\r\n//       await fetchUsers(); // Refresh leaderboard\r\n//     } catch (err) {\r\n//       console.error('Error claiming points:', err);\r\n//       alert('Failed to claim points');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: '30px', fontFamily: 'Arial' }}>\r\n//       <h1>ðŸŒŸ Monthly Wealth Ranking</h1>\r\n\r\n//       <select\r\n//         value={selectedUserId}\r\n//         onChange={(e) => setSelectedUserId(e.target.value)}\r\n//         style={{ padding: '8px', marginRight: '10px' }}\r\n//       >\r\n//         <option value=\"\">Select a user</option>\r\n//         {users.map((user) => (\r\n//           <option key={user._id} value={user._id}>\r\n//             {user.name}\r\n//           </option>\r\n//         ))}\r\n//       </select>\r\n\r\n//       <button onClick={handleClaimPoints} style={{ padding: '8px 16px' }}>\r\n//         Claim Points\r\n//       </button>\r\n\r\n//       {claimedPoints !== null && (\r\n//         <p style={{ color: 'green', fontWeight: 'bold', marginTop: '10px' }}>\r\n//           ðŸŽ‰ You claimed {claimedPoints} points!\r\n//         </p>\r\n//       )}\r\n\r\n//       <Leaderboard users={users} />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n"],"mappings":";AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}